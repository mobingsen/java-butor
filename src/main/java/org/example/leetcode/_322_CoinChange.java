package org.example.leetcode;

import java.util.Arrays;
import java.util.stream.Collectors;

/**
 * https://leetcode-cn.com/problems/coin-change/
 * 分析问题，找到规律，代码实现
 */
public class _322_CoinChange {

    public static void main(String[] args) {
        _322_CoinChange c = new _322_CoinChange();
        System.out.println(c.coinChange(new int[]{1, 2, 5}, 11));
    }

    public int coinChange(int[] coins, int amount) {
        int[][] dp = new int[coins.length + 1][amount + 1];
        //BaseCase条件
        for (int[] n : dp) {
            Arrays.fill(n, amount + 1);
        }

        for (int i = 0; i <= coins.length; i++) {
            dp[i][0] = 0;
        }

        //套模板
        for (int i = 1; i <= coins.length; i++) {
            for (int j = 1; j <= amount; j++) {
                if (j >= coins[i - 1] && dp[i][j - coins[i - 1]] != amount + 1) {
                    //这里注意如果选择第i个硬币,那么就是dp[i][j-coins[i-1]]+1
                    dp[i][j] = Math.min(dp[i - 1][j], dp[i][j - coins[i - 1]] + 1);
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
                for (int[] ints : dp) {
                    System.out.println(Arrays.stream(ints).mapToObj(String::valueOf).collect(Collectors.joining("\t")));
                }
                System.out.println("-----------------------------------");
            }
        }
        if (dp[coins.length][amount] == amount + 1) {
            dp[coins.length][amount] = -1;
        }

        return dp[coins.length][amount];
    }

    /*
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	12	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	12	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	12	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	12	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	12	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	12	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	12	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	12	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	12	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	12
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	12	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	1	12	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	1	2	12	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	1	2	2	12	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	1	2	2	1	12	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	1	2	2	1	2	12	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	1	2	2	1	2	2	12	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	1	2	2	1	2	2	3	12	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	1	2	2	1	2	2	3	3	12	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	1	2	2	1	2	2	3	3	2	12
     * -----------------------------------
     * 0	12	12	12	12	12	12	12	12	12	12	12
     * 0	1	2	3	4	5	6	7	8	9	10	11
     * 0	1	1	2	2	3	3	4	4	5	5	6
     * 0	1	1	2	2	1	2	2	3	3	2	3
     * -----------------------------------
     */
}
